from multiprocessing.forkserver import SIGNED_STRUCT
from random import randrange


class SlotMachine:
    simbolos = ['º', 'ª', '♠', '@', '§', '£', '¨' ]
    
    def __init__(self, simbolos):
        self.simbolos = simbolos
        self.creditos = int(input("Insira o número de créditos que deseja depositar: "))  
        self.creditos_a_gastar = int(input("Insira quantos créditos deseja apostar: "))
        self.aposta_jogo = str(input("Faça a sua aposta, com os símbolos (º, ª, ♠, @, §, £, ¨) seguidos: "))
        self.acabar_jogo = quit
        self.resultado = []
        self.probabilidade =[]
        
   
    def calcula_creditos(self, probabilidades, creditos, aposta_jogo, resultado):
        creditos_a_ganhar = [5, 10, 20, 70, 200, 1000, 100000]
        for i in self.simbolos:
            if i in aposta_jogo and i in resultado:
                self.creditos += creditos_a_ganhar[self.simbolos.index(i)]
                 
        #Se os 3 símbolos forem iguais então o utilizador ganha créditos em função da sua aposta e do simbolo 5aposta simbolo 1 10aposta simbolo 2 20aposta simbolo 3 70aposta simbolo 4 200aposta simbolo 5 1000aposta simbolo 6 100_000*aposta simbolo 7

    def jogo(self, creditos):
        ans = str(input("Quer jogar uma nova ronda? Insira s para continuar e n para terminar:"))
        if creditos == 0 or ans == 'n':
            print("Até à próxima")
            self.acabar_jogo
        elif ans == 's':
            self.novo_jogo()

    def novo_jogo(self):
        self.creditos
        self.aposta_jogo
        self.creditos_a_gastar
        self.probabilidades(50, 40, 30, 20, 10, 5, 1)
        if self.creditos_a_gastar > self.creditos:
            self.creditos_a_gastar = int(input("Créditos insuficientes. Insira quantos créditos deseja apostar: ")) 
        self.resultado_jogo()
        print (""" 
                              .-------.
                              |       |
                  ____________|_______|____________
                 |  __    __    ___  _____   __    |  
                 | / _\  / /   /___\/__   \ / _\   | 
                 | \ \  / /   //  //  / /\ \\ \  25|  
                 | _\ \/ /___/ \_//  / /  \/_\ \ []| 
                 | \__/\____/\___/   \/     \__/ []|
                 |===_______===_______===_______===|
                 ||*|\_     |*| _____ |*|\_     |*||
                 ||*|| \ _  |*||     ||*|| \ _  |*||
                 ||*| \_(_) |*||     ||*| \_(_) |*||
                 ||*| (_)   |*||_____||*| (_)   |*|| __
                 ||*|_______|*|_______|*|_______|*||(__)
                 |===_______===_______===_______===| ||
                 ||*|       |*|       |*|       |*|| ||
                 ||*|       |*|       |*|       |*|| ||
                 ||*|  RES  |*|  ULT  |*|  ADO  |*|| ||
                 ||*|       |*|       |*|       |*|| ||
                 ||*|_______|*|_______|*|_______|*||_//
                 |===_______===_______===_______===|_/
                 ||*|  ___  |*|   |   |*| _____ |*||
                 ||*| |_  | |*|  / \  |*||     ||*||
                 ||*|  / /  |*| /_ _\ |*||     ||*||              
                 ||*| /_/   |*|   O   |*||_____||*||        
                 ||*|_______|*|_______|*|_______|*||
                 |lc=___________________________===|
                 |  /___________________________\  |
                 |   |                         |   |
                _|    \_______________________/    |_
               (_____________________________________) 
               
               resultado: """, self.resultado )
        self.calcula_creditos(self.probabilidades, self.creditos, self.aposta_jogo, self.resultado)
        self.jogo(self.creditos)

    
    def probabilidades(self, p_s1, p_s2, p_s3, p_s4, p_s5, p_s6, p_s7):
        self.probabilidade = ['º' for i in range(p_s1)] + ['ª' for i in range(p_s2)] + [ '♠' for i in range(p_s3)] + ['@' for i in range(p_s4)] + ['§' for i in range(p_s5)] + ['£' for i in range(p_s6)] + ['¨' for i in range(p_s7)]
    

    def resultado_jogo(self):
        self.resultado = [self.probabilidade[int(randrange(0, 7))], self.probabilidade[int(randrange(0, 7))], self.probabilidade[int(randrange(0, 7))]]


slot_mac = SlotMachine(['º', 'ª', '♠', '@', '§', '£', '¨' ])
slot_mac.novo_jogo()
